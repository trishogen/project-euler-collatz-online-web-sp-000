{"examples":[{"description":"returns the correct value, given an even input","full_description":"#even_next(n) returns the correct value, given an even input","status":"passed","file_path":"./spec/project_euler_collatz_spec.rb","line_number":4,"run_time":0.000495},{"description":"returns the correct value, given an odd input","full_description":"#odd_next(n) returns the correct value, given an odd input","status":"passed","file_path":"./spec/project_euler_collatz_spec.rb","line_number":12,"run_time":8.9e-05},{"description":"returns the correct value, given an even input","full_description":"#next_value(n) returns the correct value, given an even input","status":"passed","file_path":"./spec/project_euler_collatz_spec.rb","line_number":20,"run_time":4.1e-05},{"description":"returns the correct value, given an odd input","full_description":"#next_value(n) returns the correct value, given an odd input","status":"passed","file_path":"./spec/project_euler_collatz_spec.rb","line_number":25,"run_time":3.5e-05},{"description":"returns the correct Collatz sequence, from n to 1","full_description":"#collatz(n) returns the correct Collatz sequence, from n to 1","status":"passed","file_path":"./spec/project_euler_collatz_spec.rb","line_number":33,"run_time":5.9e-05},{"description":"returns the starting number under one million that produces the longest sequence","full_description":"#longest_collatz returns the starting number under one million that produces the longest sequence","status":"passed","file_path":"./spec/project_euler_collatz_spec.rb","line_number":40,"run_time":12.526738}],"summary":{"duration":12.528078,"example_count":6,"failure_count":0,"pending_count":0},"summary_line":"6 examples, 0 failures"}